#!/usr/bin/perl
use strict;
use warnings;
use File::Basename;
my $dirname = dirname(__FILE__);

# Script to retrieve the differentially expressed genes (large worker Vs worker comparison) per groups (already generated by get_DE_pergroup_subfamily.pl) for a list of HOGs
# v2: adding the chisq results and anyDE folders

# usage: perl get_DE_results_for_hog_list.pl hogtable.tsv

# Inputs
my $inhog = "$ARGV[0]";
my $intablesdir = "/Users/joel/Dropbox/Joel/trabajo/GAGAproject/Analyses_functional_tables_enrich/GAGA_DE_large_workers/Large_worker_DE_summaries";
#my $gagatable = "/Users/joel/Documents/Results/GAGA_species_list_onlygenome_withqual.txt";

system ("ls $intablesdir\*spe*\/*.tsv > tmp_inputfiles.txt");

# Code


my ($line, $name);


# Reading input tables

my %dedata;
open(File, "<", "tmp_inputfiles.txt");
while(<File>){
	chomp;
	$line = $_;
	$line =~ s/\r//g;
	next if ($line !~ /\S+/);	

	my $type = "";
	if ($line =~ /maries_(\S+?)\_species/){
		$type = $1;
	} else {
		die "Cannot find file type in $line\n";
	}
	if ($line =~ /species_strict/){
		$type = "$type"."s";
	}
	if ($line =~ /species_anyDE/){
		$type = "$type"."_any";
	}
	if ($line =~ /species_pval001/){
		$type = "$type"."s";
	}


	my $group = "";
	if ($line =~ /Amblyoponinae/ || $line =~ /Pseudomyrmecinae/ ){ # Skip, only one species
		next;
	} elsif ($line =~ /ants/){
		$group = "ants";
	} elsif ($line =~ /Formicoid/){
		$group = "Formicoid";
	} elsif ($line =~ /Poneroid/){
		$group = "Poneroid";
	} elsif ($line =~ /HOG_summary_DEG_([^_]+)_/){
		$group = $1;
	} else {
		die "Cannot find group in $line\n";
	}


	my $headercount = "0";
	open(Filef, "<", $line);
	while(<Filef>){
		chomp;
		my $line2 = $_;
		$line2 =~ s/"//g;

		my $hog = "";
		if ($line2 =~ /(HOG\d+)/){
			$hog = $1;
		} else {
			next;
		}

		my @subl = split(/\t/, $line2);
		$dedata{$hog}{$group}{$type} = $line2;

	}
	close Filef;
}
close File;


# Reading HOG input table and printing result


open (Results, ">", "$inhog\_GAGADE_workers.tsv");
print Results "HOG\tAnts DE (75pc is 75pc of species, 50pcs is 50pc strict)\tAnts DE data (LargeworkerDE/WorkerDE/Totalspecies logFC)\tFormicoids DE\tFormicoids DE data (LargeworkerDE/WorkerDE/Totalspecies  logFC)\tSubfamily DE\tSubfamily DE data (LargeworkerDE/WorkerDE/Totalspecies logFC)\n";
open (Resultsa, ">", "$inhog\_addGAGADE_workers.tsv");

my $header = "0";
open(File, "<", $inhog);
while(<File>){
	chomp;
	$line = $_;
	$line =~ s/\r//g;
	next if ($line !~ /\S+/);	
	#my @subl = split(/\t/, $line);

	if ($header == 0){
		print Resultsa "$line\t";
		print Resultsa "HOG\tAnts DE (75pc is 75pc of species, 50pcs is 50pc strict, and chisq are significant DE using chisquare test)\tAnts DE data (QueenDE/WorkerDE/Totalspecies  logFC)\tFormicoids DE\tFormicoids DE data (QueenDE/WorkerDE/Totalspecies  logFC)\tSubfamily DE\tSubfamily DE data (QueenDE/WorkerDE/Totalspecies logFC)\n";
		$header++;
		next;
	}

	my $hog = "";
	if ($line =~ /(HOG\d+)/){
		$hog = $1;
	} else {
		next;
	}

	my $antsde = ""; my $antsdedata = "";
	my $formde = ""; my $formdedata = "";
#	my $ponede = ""; my $ponededata = "";
	my $subfde = ""; my $subfdedata = "";

	if (exists $dedata{$hog}){
		foreach my $group (sort keys %{$dedata{$hog}}) {

			if (exists $dedata{$hog}{$group}{"75pc"}) { # First priority, most strict
				my @subl = split (/\t/, $dedata{$hog}{$group}{"75pc"});
				if ($group =~ /ants/){
					$antsde = "$subl[6]\_$group\_75pc";
					$antsdedata = "$subl[1]\/$subl[2]\/$subl[4] $subl[5]";
				} elsif ($group =~ /Formicoid/){
					$formde = "$subl[6]\_$group\_75pc";
					$formdedata = "$subl[1]\/$subl[2]\/$subl[4] $subl[5]";
				} else{
					$subfde .= "$subl[6]\_$group\_75pc ";
					$subfdedata .= "$subl[1]\/$subl[2]\/$subl[4] $subl[5] ";
				}

			} elsif (exists $dedata{$hog}{$group}{"50pcs"}){ # 
				my @subl = split (/\t/, $dedata{$hog}{$group}{"50pcs"});
				if ($group =~ /ants/){
					$antsde = "$subl[6]\_$group\_50pcs";
					$antsdedata = "$subl[1]\/$subl[2]\/$subl[4] $subl[5]";
				} elsif ($group =~ /Formicoid/){
					$formde = "$subl[6]\_$group\_50pcs";
					$formdedata = "$subl[1]\/$subl[2]\/$subl[4] $subl[5]";
				} else{
					$subfde .= "$subl[6]\_$group\_50pcs ";
					$subfdedata .= "$subl[1]\/$subl[2]\/$subl[4] $subl[5] ";
				}

			} elsif (exists $dedata{$hog}{$group}{"50pc"}){ # 
				my @subl = split (/\t/, $dedata{$hog}{$group}{"50pc"});
				if ($group =~ /ants/){
					$antsde = "$subl[6]\_$group\_50pc";
					$antsdedata = "$subl[1]\/$subl[2]\/$subl[4] $subl[5]";
				} elsif ($group =~ /Formicoid/){
					$formde = "$subl[6]\_$group\_50pc";
					$formdedata = "$subl[1]\/$subl[2]\/$subl[4] $subl[5]";
				} else{
					$subfde .= "$subl[6]\_$group\_50pc ";
					$subfdedata .= "$subl[1]\/$subl[2]\/$subl[4] $subl[5] ";
				}

			}  elsif (exists $dedata{$hog}{$group}{"chisqs"}){ # Chisq pva001
				my @subl = split (/\t/, $dedata{$hog}{$group}{"chisqs"});
				my $bias = ""; # Here i donnot have the column for bias
				if ($subl[5] > 0){
					$bias = "Large_worker";
				} else {
					$bias = "Worker";
				}

				if ($group =~ /ants/){
					$antsde = "$bias\_$group\_chisqs";
					$antsdedata = "$subl[1]\/$subl[2]\/$subl[4] $subl[5]";
				} elsif ($group =~ /Formicoid/){
					$formde = "$bias\_$group\_chisqs";
					$formdedata = "$subl[1]\/$subl[2]\/$subl[4] $subl[5]";
				} else{
					$subfde .= "$bias\_$group\_chisqs ";
					$subfdedata .= "$subl[1]\/$subl[2]\/$subl[4] $subl[5] ";
				}

			}  elsif (exists $dedata{$hog}{$group}{"chisq"}){ # Chisq
				my @subl = split (/\t/, $dedata{$hog}{$group}{"chisq"});
				my $bias = ""; # Here i donnot have the column for bias
				if ($subl[5] > 0){
					$bias = "Large_worker";
				} else {
					$bias = "Worker";
				}
				if ($group =~ /ants/){
					$antsde = "$bias\_$group\_chisq";
					$antsdedata = "$subl[1]\/$subl[2]\/$subl[4] $subl[5]";
				} elsif ($group =~ /Formicoid/){
					$formde = "$bias\_$group\_chisq";
					$formdedata = "$subl[1]\/$subl[2]\/$subl[4] $subl[5]";
				} else{
					$subfde .= "$bias\_$group\_chisq ";
					$subfdedata .= "$subl[1]\/$subl[2]\/$subl[4] $subl[5] ";
				}

			}  elsif (exists $dedata{$hog}{$group}{"75pc_any"}) { # 75pc any DE
				my @subl = split (/\t/, $dedata{$hog}{$group}{"75pc_any"});
				if ($group =~ /ants/){
					$antsde = "$subl[6]\_$group\_75pc_any";
					$antsdedata = "$subl[1]\/$subl[2]\/$subl[4] $subl[5]";
				} elsif ($group =~ /Formicoid/){
					$formde = "$subl[6]\_$group\_75pc_any";
					$formdedata = "$subl[1]\/$subl[2]\/$subl[4] $subl[5]";
				} else{
					$subfde .= "$subl[6]\_$group\_75pc_any ";
					$subfdedata .= "$subl[1]\/$subl[2]\/$subl[4] $subl[5] ";
				}

			}  elsif (exists $dedata{$hog}{$group}{"50pc_any"}){ # 50pc any
				my @subl = split (/\t/, $dedata{$hog}{$group}{"50pc_any"});
				if ($group =~ /ants/){
					$antsde = "$subl[6]\_$group\_50pc_any";
					$antsdedata = "$subl[1]\/$subl[2]\/$subl[4] $subl[5]";
				} elsif ($group =~ /Formicoid/){
					$formde = "$subl[6]\_$group\_50pc_any";
					$formdedata = "$subl[1]\/$subl[2]\/$subl[4] $subl[5]";
				} else{
					$subfde .= "$subl[6]\_$group\_50pc_any ";
					$subfdedata .= "$subl[1]\/$subl[2]\/$subl[4] $subl[5] ";
				}

			} 

		}

	}

	print Results "$hog\t$antsde\t$antsdedata\t$formde\t$formdedata\t$subfde\t$subfdedata\n";
	print Resultsa "$line\t";
	print Resultsa "$hog\t$antsde\t$antsdedata\t$formde\t$formdedata\t$subfde\t$subfdedata\n";

}
close File;

close Results;
close Resultsa

