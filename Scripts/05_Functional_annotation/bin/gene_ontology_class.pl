#!/usr/bin/perl

=head1 Name

gene_ontology_class.pl  --  classify genes into Gene Ontology classes

=head1 Description

this program read the wego format gene with GO_id file, and the class 
and alias files generated by program "gene_ontology_parser.pl".

=head1 Version

  Author: Fan Wei, fanw@genomics.org.cn
  Author: Zheng Hancheng, zhenghch@genomics.org.cn
  Version: 1.0,  Date: 2008-5-22


=head1 Usage

  perl gene_ontology_class.pl <gene.wego>
  --outdir <str>  set the result directory, default="."
  --verbose   output verbose information to screen  
  --help      output help information to screen  

=head1 Exmple

  perl ../bin/gene_ontology_class.pl ../input/fly4.1-iprscan_raw.txt.go

=cut

use strict;
use Getopt::Long;
use FindBin qw($Bin $Script);
use File::Basename qw(basename dirname); 
use Data::Dumper;

my ($Verbose,$Help,$Outdir);
GetOptions(
	"outdir:s"=>\$Outdir,
	"verbose"=>\$Verbose,
	"help"=>\$Help
);
$Outdir ||= ".";
die `pod2text $0` if (@ARGV == 0 || $Help);

my $gene_wego_file = shift;
my $gene_wego_file_base = basename($gene_wego_file);

$Outdir =~ s/\/$//;
mkdir($Outdir) unless(-d $Outdir);

my %config;
parse_config("$Bin/config.txt",\%config);

my $class_file = $config{go_class};
my $alias_file = $config{go_alias};

my %Alias; ##store all the alias GO IDs.
my %GO_Class; ##store all the GO and class relations
my %Class_Gene; ##store the class and gene relations
my $total_gene;

read_class($class_file,\%GO_Class);
read_alias($alias_file,\%Alias);

##read the input wego format file
open IN,$gene_wego_file || die "fail $gene_wego_file";
while (<IN>) {
	chomp;
	my @t = split /\s+/;
	my $gene = shift @t;
	my %uniq;
	foreach my $go_id (@t) {
		$go_id = $Alias{$go_id} if(exists $Alias{$go_id}); ##替换alias GO_ID 
		foreach my $p (@{$GO_Class{$go_id}}) {
			my $first_class = $p->[0];
			my $second_class = $p->[1];
			next if(exists $uniq{$first_class}{$second_class}{$gene});
			push @{$Class_Gene{$first_class}{$second_class}},$gene; ##使用数组，这要求wego文件一行里的GO_ID没有重复
			$uniq{$first_class}{$second_class}{$gene} = 1;
		}
	}
	$total_gene++ if($gene); ##这样做，将没有GO_ID的基因也算作分母之内
}
close IN;

##print Dumper \%Class_Gene;

##generate the result file
my $output;
my @class_order = ("cellular_component","molecular_function","biological_process");
foreach my $first_class (@class_order) {
	my $first_class_p = $Class_Gene{$first_class};
	foreach my $second_class (sort keys %$first_class_p) {
		my $second_class_p = $first_class_p->{$second_class};
		my $gene_num = @$second_class_p;
		my $gene_rate = $gene_num / $total_gene;
		$output .= "$first_class\t$second_class\t$gene_num\t$gene_rate";
		foreach my $gene (sort @$second_class_p) {
			$output .= "\t$gene";
		}
		$output .= "\n";
	}
}
open OUT,">$Outdir/$gene_wego_file_base.class.stat" || die "fail $!";
print OUT $output;
close OUT;



##########################################
sub read_alias{
	my $alias_file=shift;
	my $alias = shift;
	open IN,$alias_file or die "fail $alias_file:$!";
	while(<IN>){
		chomp;
		my ($go_id,@alias_id)=split /\s+/;
		$alias->{$_}=$go_id foreach (@alias_id);
	}
}


#############################
sub read_class{
	my $class_file=shift;
	my $class = shift;
	
	my %uniq;
	open IN,$class_file or die "fail $class_file:$!";
	while(<IN>){
		chomp;
		my ($class_st,$class_se,$go_id)=(split /\t/)[0..2];
		next if(exists $uniq{$go_id}{"$class_st,$class_se"});
		push @{$class->{$go_id}} ,[$class_st,$class_se]; ##一个GO_ID可属于多个class
		$uniq{$go_id}{"$class_st,$class_se"} = 1;
	}
	close IN;
}	



##parse the config.txt file, and check the existence of each software
####################################################
sub parse_config{
	my $conifg_file = shift;
	my $config_p = shift;
	
	my $error_status = 0;
	open IN,$conifg_file || die "fail open: $conifg_file";
	while (<IN>) {
		next if(/#/);
		if (/(\S+)\s*=\s*(\S+)/) {
			my ($software_name,$software_address) = ($1,$2);
			$config_p->{$software_name} = $software_address;
			if (! -e $software_address){
				warn "Non-exist:  $software_name  $software_address\n"; 
				$error_status = 1;
			}
		}
	}
	close IN;
	die "\nExit due to error of software configuration\n" if($error_status);
}


